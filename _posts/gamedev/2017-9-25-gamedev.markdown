---
layout: post
title:  "Trontlet (working title)"
date:   2017-9-25 16:58:38 -0500
categories: gamedev
excerpt: A personal project with a larger scope
---


**Game Development and Me**

As opposed to my music creation where I felt like I was limited by my skillset and not by the timeframe; In Game Development I feel more limited by the sometimes self-imposed time constraint of a Game Jam. I feel like I may be able to create something really compelling if I just allow myself more time for iterative development.

In response to this observation I have decided to begin work on a more substantial, yet still medium-sized, personal project. I hope to fully publicize my development through the following channels:
+ Overall Progress and Ideas in periodic Development Journals
+ Unity3D Project Files, including all code and assets on [Github][github]
+ Current Feature Development KanBan board on [WeKan][wekan]
+ Documentation of mechanics and design decisions in a [Design Document on Google Drive][drive]

**Development Journal**

Welcome to Trontlet! The shameless portmanteau standing in for a real project name. In case you were wondering: the name combines Gauntlet (the action arcade game) and TRON (a oft-referenced piece of cinema and Arcade history). While my game may not necessarily adhere to the strict orthographic neon design of TRON, it really seeks to capture and pay homage to the action arcade games such as Gauntlet. I think the feeling of being On-the-Grid (inside the computer) from Tron is what I want this game to be. I want this game to have an ordered, yet unsettling, feeling to its environment and enemies. The player should feel a foreigner. Gauntlet has a speed and risk versus reward factor that I want to emulate and extend to more complex systems in three dimensions.

In Trontlet, the overall goal of the player is to navigate to the end of the level. The level itself will be a maze populated with enemies that will block the player from their goal. The player is equipped with a Coin-Operated Gun that shoots classic arcade tokens in a similar fashion to a plastic or foam disk launcher toy for children. Once a coin is fired from the gun, it can be reclaimed by walking over it where it landed, and be used to shoot again. The player's speed will be inversely proportional to the number of coins that they are holding. More specifically, a player with many coins will move slower, while a player with fewer coins will be able to move faster. In addition to movement speed, fire rate will be proportional to the number of coins a player has. A player with many coins will rapidly fire, while a player with fewer coins will fire slowly. This balances the strengths and weaknesses of each situation, while allowing a player to dynamically adjust their playstyle based on the situation.

This project will give me an opportunity to work with maze generation algorithms, first person shooter mechanics, enemy pathfinding and behaviour, and polishing the graphics and sound to a new level. One of the obvious challenges I know I will face is how to use maze generation rules and the enemy behaviours to create an interesting progression. I opted for this programatic approach as it would let me play with maze algorithms, increase the replayability of Tontlet, as well as avoid the commonly under-estimated time investment needed to manually create content such as levels for games.

Until next time!

[github]:https://github.com/lucasrumney94/trontlet
[wekan]:https://wekan.indie.host/b/Q5kySd7mRse2nDao5/tontlet
[drive]:https://docs.google.com/document/d/16rARsNw27a7206gDjVhmQs9HzPyZMSeyvsH-dwy_U3U/edit?usp=sharing
